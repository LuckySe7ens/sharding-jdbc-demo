##########分库分表配置##########
sharding.jdbc.datasource.names=iot
## 这里使用阿里的Druid连接池
#sharding.jdbc.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.ds0.url=jdbc:mysql://localhost:3306/ds_0
#sharding.jdbc.datasource.ds0.username=root
#sharding.jdbc.datasource.ds0.password=1234

sharding.jdbc.datasource.iot.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.iot.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.iot.url=jdbc:mysql://localhost:3306/iot
sharding.jdbc.datasource.iot.username=root
sharding.jdbc.datasource.iot.password=root

##默认的分库策略：user_id为奇数-->数据库ds_1,user_id为偶数-->数据库ds_0
#sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id
#sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=iot$->{id % 2}
## 这里的t_order是逻辑表，由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持inline表达式
sharding.jdbc.config.sharding.tables.t_user_vo.actualDataNodes=iot.t_user_vo_$->{0..1}
## 行表达式分片策略
sharding.jdbc.config.sharding.tables.t_user_vo.tableStrategy.inline.shardingColumn=age
sharding.jdbc.config.sharding.tables.t_user_vo.tableStrategy.inline.algorithmExpression=t_user_vo_$->{age % 2}
